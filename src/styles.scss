
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$pokemon-primary: mat-palette($mat-indigo);
$pokemon-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$pokemon-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$pokemon-theme: mat-light-theme($pokemon-primary, $pokemon-accent, $pokemon-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($pokemon-theme);

/* You can add global styles to this file, and also import other style files */
@font-face {
  font-family: 'bit';
  src: url("assets/fonts/bit.otf") format("opentype");
}
body [class^='mat-'], body [class*=' mat-'] {
  font-family: "bit" !important;
}

$grey: #2b2b2b;
$squirtle: #a6d6d8;
body {
  margin: 0;
  img {
    max-width: 100%;
  }
  .center {
    display: flex;
    align-items: center;
    justify-content: center;
    &.row { flex-direction: row }
    &.column { flex-direction: column }
  }
  .component {
    width: 100vw;
    height: 100vh;
    background: url("assets/ui/bg.png") no-repeat center center fixed;
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
    position: fixed;
    top: 0;
    left: 0;
    overflow: scroll;
  }
  .bit {
    background: $squirtle;
    width: 100%;
    float: left;
    border-left: 10px solid $grey;
    border-right: 10px solid $grey;
    position: relative;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    .bit-box{
      display: block;
      color: $grey;
      padding: 15px;
      margin: -10px 0;
      border-top: 10px solid $grey;
      border-bottom: 10px solid $grey;
    }
    &::before, &::after, .bit-box::before, .bit-box::after {
      content: '';
      width: 10px;
      height: 10px;
      display: block;
      position: absolute;
      background: $grey;
      top: -5px;
      left: -5px;
    }
  }
}
